// Code generated by go-bindata.
// sources:
// manifests/cert-manager.tar.gz
// manifests/default-network-policies.tar.gz
// manifests/ingress-nginx.tar.gz
// DO NOT EDIT!

package components

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _manifestsCertManagerTarGz = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x8a\x07\x75\xf8\x1f\x8b\x08\x00\x71\xc1\x07\x5c\x00\x03\xed\x5b\x5b\x73\xdb\x36\x16\xf6\x33\x7f\x05\x46\xde\x87\x76\xa7\xa4\x48\x5d\x77\x34\xed\x4e\xdd\xc4\xbd\x4c\x63\xaf\xc7\xf1\xf6\xa5\xd3\xa9\x21\x12\x12\x11\x93\x04\x0b\x80\x4a\xb5\x99\xfc\xf7\x3d\x00\x41\x89\xa4\xa4\x48\xb6\x63\xb9\x69\xf0\x4d\x32\x16\x49\x5c\x0f\xce\xe5\xc3\x01\xe9\x75\x53\x9c\xd1\x19\x11\x52\x74\x43\xc2\xa5\x0b\x97\x78\x4e\x78\xf7\xe4\xe3\xc1\x07\x8c\xc7\x43\xf5\x37\x18\x0f\xfd\xfa\xdf\x0a\x27\x41\x7f\xe0\x07\xc1\xb8\x37\x08\xfa\x27\x7e\x30\x0c\x7a\xfd\x13\x34\xfc\x88\x63\xd8\x89\x42\x48\xcc\x11\x3a\x89\x8b\x34\x25\x7c\x77\xb9\x7d\xcf\x3f\x51\x78\xbb\xd6\xff\x45\x8c\xb9\xf4\x96\x38\x4d\x1e\xdd\x87\x5a\xe0\xd1\x68\xb0\x73\xfd\xfb\x83\xa0\xb5\xfe\x63\x7f\x30\x3a\x41\xfe\x47\x98\xdf\x5e\x7c\xe6\xeb\x8f\x73\xfa\x0b\xe1\x82\xb2\x6c\x82\x16\x81\x13\x11\x11\x72\x9a\x4b\x7d\xfd\x42\xe9\xc3\x45\xa9\x0f\x68\xc6\x38\x7a\xc5\xee\x58\xca\x24\x5d\x10\x14\x26\x20\x38\xc2\x1d\x92\xcd\x69\x46\x26\x68\xce\x64\x9e\x38\x29\xa6\x99\x84\xff\xd0\xe2\xc4\x71\x51\x86\x53\x78\x74\x26\x62\xfa\x86\x10\x89\xce\x42\xd0\xa9\x25\x76\x10\x22\x50\x30\x99\x20\x6c\x9e\x7c\x7b\x47\xb3\x05\x4b\xee\x3c\xca\x9c\xb2\x4e\x5d\x15\x1d\xc1\x0a\x1e\x12\xdd\x62\x2c\x65\x2e\x26\xdd\xee\x9c\xca\xb8\x98\x7a\x21\x4b\xbb\xa6\x6e\x37\x81\xc1\x85\x32\x71\x16\xd5\x74\x7c\x2f\xf0\x7c\xe7\xb9\x05\xfc\x17\xc7\x4e\xfb\x5f\xe0\xa4\x20\xe2\xa3\x38\x80\x7d\xf6\x1f\xf4\x86\x6d\xfb\xef\xfb\x03\x6b\xff\xc7\xc0\x29\xba\x04\x83\x13\x39\x0e\x09\xa2\x19\x7a\x1b\xd3\x30\x46\x32\xa6\xa2\x61\x82\x68\x4a\x50\x44\xf2\x84\x2d\x49\xa4\x2d\x54\x57\x68\x99\xa9\x31\xea\x4e\xc7\xda\xdc\xa7\x83\x9d\xf6\x2f\x49\x9a\x27\x58\x12\xf1\x78\x26\x78\x7f\xfe\x37\x0e\x7a\x81\xe5\x7f\xc7\xc0\x01\xeb\xaf\x6e\xd3\x19\x0d\xe1\xc2\x0d\x79\x74\xff\x90\xb0\xcf\xff\xc3\x6a\x37\xd7\xbf\xd7\xf7\xfb\x43\xeb\xff\x8f\x81\x3a\xff\x83\xdf\xe4\x4f\x49\x32\x75\x25\xbc\xbb\x7f\x09\xe0\x63\xdd\x45\x30\x25\x12\x07\x0e\xd0\xac\x08\x28\x21\x88\x8b\xa5\xd7\xa4\xa4\x64\x2f\xc9\x8c\x66\x54\x91\x45\x27\x85\x42\x11\x96\x78\x02\xec\x6e\x4d\xe1\x8c\xda\x08\x4f\x5d\x18\xcd\x32\x0d\x43\x39\x9c\x65\x4c\x62\x55\x5d\xa8\x6a\x08\x75\x62\x92\xa4\x9e\x88\xbb\x31\x63\x77\x1d\x68\x82\x47\x2e\xcd\x60\x81\x92\x04\x9e\x27\x78\x4a\x12\x53\x12\xe7\x79\x2b\xfa\xa8\xbb\x8a\x5f\xca\xe6\x7d\x77\xe1\x7b\x23\xcf\x77\x23\xb2\x00\x32\xa8\x0a\x71\x92\x10\x2c\xda\xc1\x4b\x3d\x89\x09\xa7\x12\xae\x26\xe8\x86\x26\x89\x22\x9e\x39\x09\x55\x7f\x73\xce\x0a\xd3\xdf\xc6\x24\x16\x6b\xf6\x8c\x93\x3c\x06\x49\x21\x24\x42\x96\x43\x2b\xab\xc8\x1a\x19\xa1\x98\xc1\x1b\x51\xae\xe5\xa3\xef\xe6\x49\xc1\x71\xd2\x94\x9b\x7e\x20\x62\xc6\xe5\xe5\xba\x3a\x42\xae\x2e\xd4\xb8\x10\x0f\x0c\xba\x87\xd8\x7f\x49\xf5\xa9\x10\x05\xc8\xf3\x01\x1e\x60\x9f\xfd\x8f\x06\x83\xb6\xfd\x0f\xc6\x7d\x6b\xff\xc7\xc0\x13\xda\x7f\x5d\x6d\x3e\x37\x0f\xb0\x69\xed\xa5\x34\x7e\xd2\xd2\x68\xda\x7b\x43\x4e\x6b\xef\x61\x6a\x20\xf4\xa4\x74\xfa\x00\xfb\x4f\x88\x14\x24\x0b\xf9\x32\x97\x6e\xd3\x17\xe4\x9c\x1d\xe2\x0c\xf6\xd8\x7f\xe0\xf7\xfb\x2d\xfb\x1f\xf5\xfa\x3d\x6b\xff\xc7\x40\xdd\xfe\x37\xb5\xbb\xbb\x52\xe9\x6d\x5a\xbc\x69\xf3\x75\x55\x51\xca\x51\x84\xda\x39\x54\x56\x84\x43\x28\xa4\x95\xff\x14\xdd\xc4\x04\x9d\xbd\xb8\x38\x47\x82\x70\xb0\x20\xf4\xdf\xeb\x57\x65\xb4\xd3\x97\x93\x55\xa6\x47\xd5\x01\x13\xee\x79\x30\x52\xaf\xd6\xbe\xc7\xf8\xbc\x1b\x51\x4e\x42\xc9\xf8\xd2\x34\x7a\xae\xb6\xa0\x08\x47\x11\x27\x42\xa0\x42\x90\x48\xe7\xad\x74\x3f\x9c\xcc\xa9\x90\x5c\x7b\x1b\x5d\xfc\xdd\x3b\x17\xd1\x19\xf2\x7e\x29\x33\x1d\x7a\xfb\x8a\xde\xbf\xd7\xcf\xcc\x5e\xf6\xdd\xbb\xed\x8f\x55\x55\xf0\x44\xa4\x59\xfa\x6b\xfd\xf7\xdf\xeb\x12\x59\x64\x0a\x94\xbb\x6c\xc4\x66\x08\xc3\x04\x43\x4e\x64\x39\x38\xc9\x10\xf8\x53\x4e\x60\xc7\x6d\xa4\x81\xc3\x90\x15\x99\x44\x39\xa7\x0b\xb0\x3e\x74\x47\xca\xb9\x99\xeb\x9f\xc9\xf2\xb5\xae\x7f\x4d\x66\x15\x1b\xf8\xa0\xe8\x8d\x5c\x32\x3c\x4d\xca\x5e\x7e\xbc\xb9\xb9\x72\xfd\x40\x79\x4a\xf0\x70\xd9\x9c\x40\xd3\x6c\x41\xa3\xca\x03\x82\xd8\xfd\x00\x66\xfe\xde\xee\xe2\x3f\x07\x1c\xe0\xff\xf9\x14\x87\x8f\xca\x03\xee\xf3\xff\xe3\xd1\xa8\xe5\xff\xfd\x71\xcf\xe6\xff\x8f\x82\xba\xff\xd7\x0b\x8d\x0b\x09\xfb\x0d\xfa\x3f\xed\x27\x77\x90\xc0\x32\x0a\x5c\xb3\x84\xec\xd8\xf7\xd5\x48\xd5\xf1\x39\x1b\x2f\x92\x92\x7b\xb9\x8a\xd1\xfe\xa0\x98\x9b\x98\xa0\x5f\x3b\x9b\xe1\xad\xf3\x9b\x69\xbb\x3a\x61\x30\xa5\xaa\xed\x57\xe7\x2b\xd4\x31\xbc\x4c\xfd\x6c\x32\x35\x53\x19\x82\xd5\x54\x57\xfc\xa7\xbe\xd1\xea\x73\x6b\x0f\x2c\x9b\xd1\x79\x8a\x73\xdd\x68\x19\x0e\xf4\x4f\xb2\x20\x99\x34\x37\xf9\x82\x86\xe5\x00\x72\x16\x1d\xd6\xd7\x9a\xbb\x6f\xeb\x95\x66\x73\x15\x14\xc9\xd6\xb6\x5c\xd7\x75\x1e\xa9\x09\xdf\xc1\x0d\xe8\xe3\x2f\xa9\x10\x30\x3c\x13\x2f\x2b\x81\x7d\x60\x8a\x4e\x8b\xb2\x6b\x35\xdf\x3a\x17\x51\x4c\xdf\x00\xfd\x30\xba\xb6\x75\xb2\x1b\x2c\x63\x95\x3c\xaf\xa8\x44\x2d\x9b\x5e\x63\x1b\x1b\xc5\x5a\x8c\x63\x57\x0e\x7e\x93\x7a\x94\x73\x79\x5d\x2a\xd4\x59\xc9\x2e\x6a\xa1\xfd\x00\xff\xbf\xea\xeb\xa1\x41\x60\xdf\xfe\x7f\x18\xb4\xf2\xbf\xbd\x60\x6c\xf3\x7f\xc7\x41\xeb\xfc\xb7\xd4\x96\x55\xe2\xaa\x61\xcd\x1f\xd6\xe4\x83\xf4\xb8\xa1\xc5\xbb\x75\xb8\xae\xc1\xfb\x7b\xbd\x57\x87\xbb\xfa\x2a\x8b\xd7\x7d\xd3\x96\xdd\x50\x44\x85\xe2\xd1\xee\x02\x27\x34\xc2\xe5\x21\x79\x47\xf2\x82\x7c\xba\x47\x5e\x07\xd8\x7f\x79\xf0\x97\x42\x6c\x7a\xa0\x03\xd8\x63\xff\xbd\xc0\x6f\xe7\xff\x7b\xc1\xc8\xb7\xf6\x7f\x0c\x34\xf3\x7f\xb9\x68\x05\xf8\x97\xab\xb5\xdf\x1f\xd8\x9f\xc7\x3f\x3c\x5f\x4e\x90\x83\x6c\x80\x27\x02\x89\xd2\x39\x7f\x68\x40\xa5\x22\xca\x91\xa4\x58\x86\xf1\xab\xda\xd0\x76\x0d\x6e\x77\xcf\x95\x01\x9a\x06\x6b\xd2\x57\x48\x1a\x6d\xef\x6e\xfd\x43\x33\xdb\x92\x7f\xad\xe6\x56\x65\x62\xd6\x9c\xe1\x72\x3b\xbd\x01\xf1\xb2\xf5\x2b\x3f\x55\x9f\x3b\xd9\x50\x09\x9a\x6a\x79\x76\xfe\x28\xf0\x52\xf9\xd5\x37\x40\x80\x25\x0e\xef\x1a\x1e\xc8\x55\x0d\x03\x75\x03\x91\x4f\x60\xb9\x86\x9e\xdf\x69\x37\x71\x55\x24\xc9\x15\x83\x45\x58\x4e\xd0\x4f\xb3\x4b\x26\xaf\x80\xe2\x2a\x5d\x5d\x97\xc3\x7c\x5e\x1b\x97\x1a\x99\x5b\x25\x31\xdd\x8a\x1f\xbb\x2b\x4d\xfb\xe6\x1f\x5f\x5c\xfd\xe7\xe5\xef\x97\x67\x17\xe7\xaf\xaf\xce\x5e\x9c\x7f\xd9\xaa\x09\x92\x8c\xa0\xa2\x5e\x6a\x10\xda\x61\x15\x49\xb6\x68\x8e\xa0\x94\x4d\xa3\x7c\xed\x39\x50\x73\x65\x1b\xdf\x73\x96\x4e\x1a\xb7\x11\x9a\x51\x92\x44\xb5\xcc\x4f\xeb\xc9\x15\x96\xf1\x64\xa5\x29\x6b\xdb\xaa\x95\x5e\x6f\x09\x1a\x4d\x70\xf2\x47\xa1\x42\x40\xbb\xe1\x30\x2f\x40\xbb\xfd\xb4\x75\x3b\x25\x29\xe3\x20\xf3\x7e\xef\x82\x7e\xb2\x91\xcf\x42\xe1\x51\xf9\x7f\x30\xda\x39\xec\xf9\xf6\xd1\x82\xfd\xf9\xff\x61\x3b\xff\x0f\x3f\x6c\xfc\x3f\x06\x9e\x2e\xff\x6f\x94\xe3\xf1\xc9\x7f\xd3\x90\x3d\x04\xb8\xdf\x21\x40\x25\x7f\x23\x14\x7b\x02\x60\xb1\x05\x07\xf8\xff\x87\xbf\xf8\x61\xb0\xf7\xfd\x8f\x5e\x3b\xff\xd3\xf3\x47\xf6\xfd\x8f\xa3\xe0\xe9\xde\xff\xb0\x2f\x7e\x68\x89\x6d\x79\xe3\x63\xe3\x55\x8f\xda\x8b\x62\xc7\x5e\xff\x03\xec\xdf\xec\x03\x4d\x50\x7a\x80\x0f\xd8\x67\xff\x83\x61\x9b\xff\xf5\x7d\x7b\xfe\x77\x1c\x6c\xcd\xff\xb6\x4e\x0b\x6c\xe6\xc7\x38\x85\xe7\x5e\xac\x27\xc0\x4e\xfb\xbf\x3e\x3f\x7b\x79\x71\xee\xa5\xd1\xe3\xfb\xb8\x77\xfc\x0f\x46\x03\xdf\xe6\x7f\x8f\x82\xd3\xa6\xda\x3b\x37\xea\xd3\x9f\xb7\xa0\xee\xa0\xfd\x49\x8e\x96\xac\x40\x26\x0c\xeb\xbd\x43\xe3\xa3\xa0\x90\xa5\x39\xcb\xd4\xb9\x80\xe3\x38\xa7\xa7\x08\xb6\x23\x84\xc3\xf6\x03\x76\x31\x99\x78\xab\x22\x9c\xe3\xa2\xdb\x95\x31\xdf\x4e\xd0\x55\xb9\xd1\xd0\x4d\xad\x1d\xc0\xea\xbb\x23\xd5\xdb\x5b\x0c\x1b\x1f\xd8\x12\x95\xa7\x0e\x1b\x9d\x7e\xa5\x1c\x8d\xfe\x3e\x09\xfe\x01\x87\xa8\xf6\x2e\x11\x9a\x2e\xa1\xce\x0c\x17\x89\x2c\x13\x68\xaa\xc0\x6d\xbd\xea\xad\xa7\xc7\xa3\xf7\x67\xad\xb1\x90\xc6\x96\xb1\x1c\x8c\x88\x59\x91\x44\xea\xcb\xa7\xdd\x5b\x48\x4f\xcf\xfb\x35\x86\x50\x49\x80\xd3\xe8\x49\xa3\x19\x4d\x88\xe3\xdc\xde\xde\xaa\x48\xb9\xef\x6b\xa9\x19\x63\xdf\x4e\x31\x57\x5f\x32\xaa\x2a\x7f\x47\x17\x63\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\xf1\x8c\xf8\x3f\x78\xb2\x2c\xb7\x00\x50\x00\x00\x01\x00\x00\xff\xff\x4a\x0e\xf7\xeb\x8a\x07\x00\x00")

func manifestsCertManagerTarGzBytes() ([]byte, error) {
	return bindataRead(
		_manifestsCertManagerTarGz,
		"manifests/cert-manager.tar.gz",
	)
}

func manifestsCertManagerTarGz() (*asset, error) {
	bytes, err := manifestsCertManagerTarGzBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/cert-manager.tar.gz", size: 1930, mode: os.FileMode(436), modTime: time.Unix(1544012145, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _manifestsDefaultNetworkPoliciesTarGz = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x43\x02\xbc\xfd\x1f\x8b\x08\x00\x71\xc1\x07\x5c\x00\x03\xed\x95\xdd\x6e\xd3\x30\x14\xc7\x7b\x9d\xa7\xf0\x0b\xe4\xbb\x49\x20\x57\x88\x8f\x2b\x10\x42\x1a\xda\xbd\xe7\x9c\x36\x26\x4e\x6c\xd9\x4e\x47\x35\xf5\xdd\xb1\xd3\x66\x1b\x13\x55\xcb\x06\x03\xc4\xf9\x55\x95\x63\xfb\xe4\xd8\xce\x39\xfe\x9f\x28\xee\xe9\xc0\x57\x60\xac\x89\x1b\x58\xd1\x51\xd8\x70\x00\x7b\x2d\x75\x17\x2a\x29\x38\xe3\x60\xe2\xc5\xd3\x48\x1c\x55\x55\xf8\x36\xad\x8a\xe4\x7e\x3b\xb3\x48\xf3\xbc\xca\x93\xb2\x2a\x8a\x6a\xe1\x67\xb3\x6c\x41\x8a\x27\xae\x7b\x16\xa3\xb1\x54\x13\xb2\x68\xc7\xbe\x07\x7d\xdc\xee\xd4\xfc\x3f\x4a\x74\x4e\xfc\xdf\xb4\x54\xdb\x68\x4b\x7b\xf1\xa8\x35\x7c\x80\xcb\x72\x79\x34\xfe\x79\x59\x7d\x1f\xff\x2c\x5d\x16\xc5\x82\x24\xbf\xf8\xac\x3f\xe4\x3f\x8f\x3f\x55\xfc\x12\xb4\xe1\x72\xa8\xc9\x26\x0d\x1a\x30\x4c\x73\x65\xa7\xfe\xfb\xf1\x0a\xb4\x4b\x06\x30\xe4\xe3\x3e\x25\xc8\x9c\x12\x64\x25\x35\xf9\x20\x3b\xd9\x4b\xcb\x37\x40\x98\x70\xdf\x11\x74\x00\xc3\x9a\x0f\x50\x93\xb5\xb4\x4a\x04\x3d\xe5\x83\x75\x7f\xb7\x40\x1d\x84\x64\xa0\xbd\x9b\xba\x18\x35\xfd\x42\xde\x82\x69\xfb\xb1\x6b\x03\x42\xc0\x99\x89\x9a\x18\x3f\xfe\xaa\xe3\xc3\x46\x8a\x2e\xe2\x32\xd8\x9b\x1f\x4b\xca\xc0\xc8\x51\x33\x98\x1c\xb7\xd6\x2a\x53\xc7\xf1\x9a\xdb\x76\xbc\x8a\x98\xec\xe3\x83\x9f\x58\xb8\x3d\x32\x2b\x82\xcd\x7c\xc8\x24\x4a\xa3\x24\xf8\xd3\x9f\xfd\xaf\xe1\xac\xfb\x6f\xa1\x57\x82\xda\xc7\x56\x82\x73\xf5\xdf\x89\x7e\xb6\xdc\xdf\xff\x22\x45\xfd\x7f\x16\x7e\x32\xfe\x0d\x0c\xdb\xb0\x07\x4b\x1b\x6a\x69\x48\x99\xbb\x80\xe6\x64\x61\x38\xa5\xff\x45\x91\x3f\x88\x7f\x99\xa3\xfe\x3f\x0f\xf7\xf5\xff\x10\x77\x3e\xac\xa3\xee\x85\x71\x12\x1c\xbb\x8a\xe0\xba\x4d\x3d\xeb\xff\x27\x9f\x11\xdb\x60\x4e\x80\xda\xa9\xf7\xac\xd2\x2e\x2f\x60\xad\x5d\x3a\x84\x56\x86\xf4\xda\xdc\x66\x89\xb3\xb9\xb9\x09\x09\x5f\x91\xe8\x92\x8a\x11\x4c\xe4\x5f\x31\x8a\x32\x20\xbb\xdd\xc1\xc3\xd4\xad\x9d\xe1\x31\x23\xef\x02\x84\x81\x87\x6f\x1c\x72\x76\xb6\x18\x1a\x6f\x6e\x14\x30\xbf\x37\x25\x9b\x0b\x10\xc0\xac\xd4\xce\xf7\x6e\x1a\xf1\x07\xf8\xbc\x55\xbe\x70\x10\x12\x92\x77\xd3\x9e\x7d\x15\x9a\x1e\xf6\x83\x56\xfa\xd6\x3f\x71\xf5\x5a\x48\xd6\xed\xbb\x1e\xc6\x1b\xed\x8b\xc8\xf4\x8b\x93\xdb\x71\xf8\xca\x40\xd9\x3b\xbb\x90\xa4\xe5\xcb\x28\x2b\x96\x91\x6f\x93\x38\x5b\x62\xcd\x41\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\xe4\xf7\xf2\x0d\x88\x47\xea\x0b\x00\x28\x00\x00\x01\x00\x00\xff\xff\xec\x83\xcc\x48\x43\x02\x00\x00")

func manifestsDefaultNetworkPoliciesTarGzBytes() ([]byte, error) {
	return bindataRead(
		_manifestsDefaultNetworkPoliciesTarGz,
		"manifests/default-network-policies.tar.gz",
	)
}

func manifestsDefaultNetworkPoliciesTarGz() (*asset, error) {
	bytes, err := manifestsDefaultNetworkPoliciesTarGzBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/default-network-policies.tar.gz", size: 579, mode: os.FileMode(436), modTime: time.Unix(1544012145, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _manifestsIngressNginxTarGz = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\xb8\x0a\x47\xf5\x1f\x8b\x08\x00\x71\xc1\x07\x5c\x00\x03\xed\x5c\xeb\x6f\xdb\x38\x12\xcf\x67\xff\x15\x44\x72\x40\xee\x80\xf3\x43\xf2\xab\x67\xec\x2e\x2e\x9b\xa4\xdd\x00\x6d\xd6\x48\xd2\x7e\x39\x1c\x1a\x5a\x62\x2c\x6e\x24\x51\x4b\x52\x76\xbd\xc5\xfe\xef\x37\xd4\xc3\x7a\xd8\x8a\x6c\x27\xb5\xd3\x5b\xfe\x80\x20\x16\x5f\xc3\xd7\x0c\x67\x86\x23\xb5\xda\x1e\xf6\xe9\x03\x11\x52\xb4\xa9\x3f\xe5\x44\x88\xa6\x3f\xa5\xfe\x97\xf6\xd1\x8b\xa1\x03\x18\x0e\xfb\xea\xbf\x31\xec\x77\xf2\xff\x53\x1c\x19\xdd\x1e\x24\x76\xfb\x43\xc3\x38\xea\x18\x7d\xf8\x71\x84\xfa\x2f\xd7\x85\x6a\x84\x42\x62\x8e\xd0\x91\x13\x7a\x1e\xe1\xd5\xe5\xea\xf2\xbf\x53\xb4\x2a\xd7\xff\xdc\xc1\x5c\xb6\x16\xd8\x73\x9f\x4b\x43\x2d\xf0\x60\xd0\xab\x5c\xff\xae\x39\x28\xad\xff\xb0\xdb\xe9\x1f\xa1\xce\x4b\x0c\xb0\x0e\x7f\xf1\xf5\xc7\x01\xfd\x44\xb8\xa0\xcc\x1f\xa1\x99\xd1\xb0\x89\xb0\x38\x0d\x64\xf4\x7c\xad\xf6\x01\x9a\x60\x41\x6c\x94\xec\x0d\xc4\x02\xc2\xb1\x64\xbc\x41\xd4\x2e\x21\x23\x34\x65\x32\x70\x1b\x1e\xa6\xbe\x84\x3f\x68\x6a\xd4\x68\x22\x1f\x7b\x90\x75\x1b\x72\xfc\x1b\xba\x20\xc2\xf1\xc2\x47\xa7\x81\x10\x81\x62\xee\x08\x09\x95\xfe\xef\x47\xea\xcf\x98\xfb\xd8\xa2\xac\x11\x17\x2f\x6c\xbf\x86\x60\x21\xb7\x48\xd4\x9a\x23\x65\x20\x46\xed\xf6\x94\x4a\x27\x9c\xb4\x2c\xe6\xb5\x93\xca\x6d\x97\x3d\x32\x4b\xba\x8d\x59\x3a\x86\x4e\xcb\x68\x75\x1a\x87\x9e\xd5\xef\x07\xd5\xfc\x3f\xc3\x6e\x48\x44\x53\x60\x2f\x70\xc9\xb3\xe4\x40\x1d\xff\x1b\x9d\x61\x91\xff\x4d\x03\x7e\x6b\xfe\xdf\x07\x4e\xd0\x35\x30\x9f\x08\xb0\x45\x80\x01\xd1\xdc\xa1\x96\x83\xa4\x43\x45\x91\x1d\xd1\x84\x20\x9b\x04\x2e\x5b\x10\x3b\x62\xd7\xa8\xc6\x92\x67\x35\xc3\x7d\xaf\xa8\xe6\x7f\x49\x80\xf1\xb1\x24\xe2\xd9\x9a\xe0\xe6\xfa\x5f\xaf\xd3\xef\xc5\xe7\x7f\xdf\xd4\xfa\xdf\x3e\xb0\xc9\xfa\x73\xf6\xbc\x03\xa0\x46\xfe\x1b\x20\xf4\xcb\xf2\xdf\xec\x0c\xb4\xfc\xdf\x07\xf2\xfa\x1f\x9f\x60\xab\x85\x43\xe9\x30\x4e\xff\xc0\x4a\x07\x6c\x3d\xbe\x11\xa0\xa0\xb5\x41\x33\x04\x8d\xcb\x1e\xa1\x1b\xd8\x0a\x0d\x8f\x48\x6c\x63\x89\x47\xa0\xd2\x15\x54\x37\x78\xfe\xfa\xb5\x89\xe8\x03\x6a\x7d\x8a\xb4\x87\xd6\xf2\xa8\x40\x7f\xfe\x99\x94\x4e\x4e\x8e\xaf\x5f\xab\x0a\xa9\x26\x88\x2b\x48\xb9\x46\x91\x08\xf1\x6d\x55\xbc\xc1\x43\x57\x69\x89\x08\x35\x11\x8c\xe5\x1d\x67\x61\x10\x3d\x2a\x34\xd1\xf1\x71\xf4\x13\xea\xa5\xea\x64\x9a\x63\x31\xff\x81\x4e\x3d\x1c\x88\x65\x52\xc0\xec\xec\x41\x10\x8b\x13\x19\x3f\x83\x76\x39\xc9\x55\x9d\x12\xf9\x6c\x7a\x69\x89\xe8\xf4\x4d\x4b\x9d\x80\xb2\xfc\x80\x43\x57\x0a\x24\x19\x3a\xfe\x81\xb8\xc4\x52\xcb\xd0\xa4\xf6\x4f\xcd\x1f\x52\xf6\xb4\x5c\x2c\xc4\x4f\xc7\xcb\x3a\xbf\x10\x0e\xb3\x73\x9c\xe5\x33\x5f\x02\xcb\xba\x84\x37\x5d\x82\x6d\xc2\xa1\x6e\xc4\xd2\xb9\x3a\x77\xea\x84\x77\x70\x44\x07\x8e\x76\x58\xce\x40\x2a\x2d\xff\x01\x2d\x58\x88\x2c\x07\xfb\x53\x82\x08\xe8\xdb\x84\xa3\x00\x73\xe8\xa4\x24\x7c\x59\x7b\xee\x10\x1f\xb9\x38\xf4\x2d\x07\x88\x82\xba\x40\x50\x44\xa0\xb9\xda\x85\x56\x36\x35\x95\xfd\x6b\x06\xe1\xc4\xa5\xd6\x71\xf5\x5c\xc7\xbf\xc3\x00\x76\x1d\x79\xf6\xd4\x97\x28\xc0\x32\xef\xd4\x2a\x6c\xc0\x80\x81\xd5\xf3\xc4\x16\x29\x11\x28\x8c\xe2\xd0\x8c\x9f\x60\x13\xf9\x1f\x88\xa0\xa9\xce\x80\x09\x88\x00\x28\xb3\xf5\x51\x50\xa7\xff\xc3\xb1\x5f\x3c\xff\xcd\x2e\x40\xcb\xff\x7d\x60\x07\xf9\xff\x73\xbc\x0d\xd6\x1c\x03\x6a\xa3\x54\x09\x82\x03\x9c\x0d\x6a\xcf\xde\x90\x07\xd5\xbf\xdc\xe9\xb5\x61\x67\x53\x59\xf0\xc4\xb4\x34\x44\x38\xf9\x0d\x24\x74\xe4\xa4\x88\x29\xdc\x12\x3e\xa3\x16\x39\xb3\x2c\x16\xfa\xf2\x15\x9c\x8f\x75\xeb\xbf\x09\xff\x8b\x78\x50\x3b\xab\x80\xb5\xfc\x3f\x5c\xb1\xff\x87\x46\x4f\xf3\xff\x3e\x50\xf2\xff\x15\x76\xf1\x1a\x0e\x7f\x45\xdc\x0d\x2c\xea\xfb\x4c\x46\x0c\x99\x9c\xbc\x01\x67\xd0\x65\x87\x84\x91\xd0\x12\x16\xc7\x01\xd4\x3e\x95\x3c\x24\xa7\x6b\x0a\x04\x8c\x4b\xc8\x36\x3a\x66\xbf\x77\xda\x10\x01\xb1\x54\x33\x72\xa1\x2a\x9d\xbb\xb0\x31\x08\xbf\x1a\x43\x8a\x88\xf4\x30\xc6\x63\x22\xb5\x13\x01\x64\x40\xb3\x52\x12\x86\x33\x1b\x9e\x15\x99\xa4\x83\xa9\x67\x54\x79\x34\x13\x85\x00\x0a\x49\x66\x31\x77\x84\xee\xce\xc7\x69\x5a\xd4\xb1\x37\x9d\xe4\x11\x36\x28\xe8\x13\xe3\x7c\x62\xbe\x21\x51\xdb\x52\xaf\xd7\x5d\xd3\x94\x4a\xdd\x88\xff\xed\x58\x29\x6d\x82\x1c\x7c\x84\xc9\x6f\x6e\x2b\x0f\xea\xf8\xbf\x6f\x76\x4b\xfc\xdf\x1b\x1a\x1d\xcd\xff\xfb\xc0\x96\xfc\x5f\xda\x0a\x07\x60\xfb\xed\xd8\x74\xb5\xbf\xdf\x98\x3b\xdf\x7c\x67\x97\x0f\xdb\xe8\xff\xbb\x2a\x00\xb5\xfc\xdf\x2d\xeb\xff\x86\x72\x17\x6a\xfe\xdf\x03\x5e\xc6\xff\xf3\xda\x14\xff\xd8\x27\x94\x37\xe8\xd1\x7f\x4e\x03\xe6\x52\x6b\x71\xfa\xdf\x46\xde\x9c\x8f\xd2\x6d\x41\xac\x90\x53\x10\x29\xaa\x08\x25\xa2\x50\x28\x76\xd1\x40\xc1\xaa\x11\x46\xa5\x63\x07\x00\x94\x0a\x05\x81\x84\x43\xaf\xeb\xa6\xd8\xd4\xff\xdb\xdc\xd5\xf8\x3f\xda\x40\xff\xef\xf4\x4a\xe7\xbf\x39\x30\xb4\xfd\xbf\x17\xbc\xa8\xfd\x7f\x38\x33\x37\x67\xea\x6f\x62\xb8\xaf\x75\x08\xa4\x0d\x67\x56\xbd\x52\x09\x2a\xec\xfa\xba\x21\x6e\x38\xc8\xd2\x30\x2b\x06\x5a\xb2\x7b\xca\x1d\x7e\xce\xfa\x6f\x61\xff\x37\x71\x3c\xfa\x17\xf7\xff\x99\x83\xec\xfc\x37\x07\xfd\xd8\xff\x67\x68\xfe\xdf\x07\x9e\xd2\xff\xd3\xdd\xfe\x9a\x18\xfd\xd0\xf3\xf5\xff\x86\x4d\xf8\x7f\xb9\x26\x3b\x1a\x00\x75\xfc\xdf\xeb\x94\xed\x7f\x30\x00\x4c\xcd\xff\xfb\xc0\x5a\xfe\x5f\x86\x04\x15\x58\x7f\xff\x0e\xbe\x7a\x8a\x5b\x11\xd3\x22\x65\x15\x1b\xda\xff\xdf\x32\xfe\xcf\xe8\x19\x66\xd9\xfe\xef\x74\x75\xfc\xc7\x5e\x90\xe7\x7f\xf2\x45\x12\x5f\xfd\x14\xa0\xf0\x4f\x80\xf3\x53\x79\x30\x66\xf6\x6d\x62\x21\x8f\x23\x23\x7a\x9b\x9b\x81\xd4\x61\x87\x5d\x97\xcd\x89\x7d\x8e\x03\x3c\xa1\x2e\x95\x34\x0d\xdb\xb8\xbe\xbc\xfb\xfc\xf3\xd5\xf5\xc5\xe7\xdb\xcb\x9b\x4f\x57\xe7\x97\xca\x29\xc7\xe9\x8c\xba\x64\x4a\x80\xf8\x03\x06\x1e\x4e\xeb\x8f\xd3\x8c\x4b\x61\x61\x17\xc7\x71\xca\xca\xbf\xdf\x50\x71\x09\x67\xaa\x08\xb2\x18\x27\x68\xc6\xdc\xd0\x23\x91\x97\x50\xa8\x18\x84\xf8\x39\xa1\x18\x07\x04\x7c\xc0\x41\x23\x8b\xf4\x80\x9f\x0e\x13\xf2\x9a\xc8\x39\xe3\x8f\x19\x59\x95\x78\x35\x3e\x2f\x26\x8c\xaf\x2e\xb2\x04\x1e\xfa\x67\xe2\x23\x28\xc9\xb1\x17\x51\x39\x1f\x46\xe8\x03\xec\xab\x1b\x95\x11\xa7\xa9\x78\x8a\xa5\x97\xd1\xa3\xd0\xe9\x6e\xea\x92\xf7\xf0\x97\xe4\x49\x84\x41\xe0\x12\x8f\xf8\x12\xbb\xf9\x38\x84\xba\x16\x4f\xd0\x5b\xc6\x27\xd4\x46\xd8\xb6\xd3\x78\x0c\xce\x98\x44\x53\xd5\x48\x2b\x4f\xd5\xc8\x13\x1d\xf4\xfb\xdd\x3e\x24\x3c\x88\xd8\x60\xda\x0b\x31\x4e\xb0\xfd\xab\xef\x2e\x6e\xa0\xce\x5b\x58\x4a\xb1\x10\x20\x69\xb2\xd9\x14\xe4\x3d\xf5\xc3\x2f\xf9\xce\x44\x1d\x39\xf3\x17\xe9\xe4\xa7\x1e\xdb\x84\x4c\xe2\x89\x8d\xa8\x44\xbf\x93\xf4\xf4\xd6\x23\xca\x88\x1f\xd2\x8e\xa9\x1b\x9f\x2c\x2f\x7e\x3c\x34\x27\x1e\x06\x9b\xdd\xff\xa8\xc0\x5f\xb5\x2f\x77\x3b\x06\x6a\xe4\x7f\xaf\x5b\x7e\xff\xc7\x34\x7b\x86\x96\xff\x7b\x41\x5e\xfe\xe3\x20\x10\x99\xab\xe7\x62\xb9\xea\xaf\xfb\x1e\x38\x3d\x5f\x38\xf4\x97\x5a\x58\x8c\x90\xa9\xc4\x88\xe4\xb0\x77\xa7\x8b\x44\x8e\x40\xe7\xa0\xf2\xc7\x28\xf4\x6a\x94\x89\xa5\x8f\x3e\x9e\x61\xea\xe2\x89\x12\x33\xc6\xca\x1d\x92\x87\xa5\xe5\xbc\xc7\x13\xe8\x4b\x5a\x69\x83\xdb\xdf\xf2\x0d\x53\xca\x48\x49\x9b\xb9\xb9\x54\x70\x0b\xcd\x6f\x48\xa0\x4c\x02\x3a\x9e\xcc\x42\xd4\x04\xb3\xc9\x6d\x61\x20\x69\x6a\x7c\x8d\xf3\x18\x4e\x08\xf7\x09\xb0\xb6\xf2\xed\xa9\xf4\x51\x1a\xe7\x86\xd4\xd9\xb8\x7c\x91\x27\xad\xda\xdc\xb4\x57\x08\x51\x0f\x4f\xa1\xe4\xef\x21\x5e\xa8\xc6\x33\x52\x6b\xaa\xb5\xab\xda\x1b\x75\x5a\xc6\xbf\x5a\x9d\x5c\xb3\x98\x4f\x73\xfd\x89\xfb\x54\x59\xbd\x54\xae\xd9\xac\xb8\xc0\xfe\xf1\x6f\x7f\x1f\xff\x7a\xf1\xf9\xfa\xec\xc3\xe5\xed\xf8\xec\xfc\xf2\x1f\xe5\x9b\xee\x95\x86\x0a\x21\x98\x3f\xc6\x61\x8b\xb9\x42\x27\x28\x14\x04\xd9\x6c\xee\xcf\x31\xb7\xd1\xd9\xf8\x2a\x97\x49\xfc\x59\x79\x04\xf1\xac\xa6\x7d\x28\x64\x82\xc6\xa2\x58\xe3\x2d\x67\xde\xa8\x94\x01\x07\x36\x25\xae\x9d\xb8\x3b\xd7\xe6\x8d\xb1\x74\x46\xcb\xad\x16\xb1\xd7\x93\xa4\xa3\xe1\x7f\x5b\xfa\xb1\x3d\x99\x95\xcb\xdd\xbb\x96\x7b\x95\xbb\x7f\x4d\xb1\xdc\x95\xe3\xe2\xe5\x6b\x8a\x54\x2f\x58\xc9\x5a\x17\x28\x51\xd1\x68\x16\x25\xb1\xda\x6a\x39\x6f\xd9\x2c\xc1\xae\x74\x9e\x6e\x37\xd3\x36\xd6\xb5\x5c\xce\x75\xe9\x8c\xf8\xb0\xc7\xc6\x9c\x4d\x48\x71\x7e\x1e\x40\x54\x85\x9c\xdc\x39\xb0\x07\x1d\xe6\x82\x8c\x2e\x76\x4a\x8d\xf1\x1d\x91\xe5\x55\x09\xa2\xc5\x68\xc7\x5d\xfd\xa3\x9c\x59\xd9\x45\x61\x39\x44\x0d\xf1\x97\xbb\xbb\x71\x21\x8b\xfa\xa0\xbc\x63\xf7\x82\xb8\x78\x01\x66\x01\xf3\x6d\xa1\x5a\x28\x94\x09\x08\xa7\x91\xd1\xb0\x36\x57\x84\x96\x05\x43\xcc\x0d\xc4\x28\xe4\x4b\xea\x11\x16\xca\xac\x7a\x2e\x57\xe9\x8f\xf4\x75\x4f\xd0\xb7\x1b\x7c\x7a\x4f\x79\x0e\x3b\x0c\xac\xb5\xe2\x40\xac\x92\x65\x95\x07\x28\xeb\xe5\xa4\xb5\x86\x57\x1e\x36\x67\xc1\x6a\xa5\xb3\xf7\xef\x0b\x69\x99\xf5\x03\x46\x8c\x8a\x0d\x9f\xcf\x9b\x8a\xe9\x93\x42\x30\x48\xd0\xaf\x64\x6c\x36\x8e\xc0\x42\x9b\xe3\x45\xca\x87\xa2\xe0\x66\xbe\x2e\x79\x68\xa2\xb9\x20\x1c\x14\xf6\xc8\xcc\x7b\xc7\x41\x7e\x8c\x8b\x33\x3b\xf8\xce\x82\x2d\x5e\x21\x36\xd1\xff\xad\x38\xc8\x66\xe7\x18\x90\x3a\xff\x4f\x77\xb8\xa2\xff\x0f\x06\xda\xff\xbb\x17\x6c\x79\xff\x9b\xc4\x5b\xd5\xbc\x06\xf4\x82\xef\xe4\x14\xdf\xb2\x88\x0e\x5e\xd0\x57\xb7\x7f\x67\xc7\xa5\x22\x7b\x23\x63\xae\xf4\xfa\xed\xbb\x97\x51\x7e\x89\x17\x82\x12\xe9\x57\xfb\xfa\xc8\x16\x3d\xcf\x1c\x78\x95\x54\x93\x25\x7a\x51\xb2\x15\xc4\xa2\xe5\x03\x65\x66\xdd\x82\xac\xbc\x17\x13\xad\xe5\x8b\x0d\xae\x0d\x4c\x2d\xc3\xb5\x63\x7c\x5d\xaf\xdf\x1c\x1c\xbb\xc4\xff\x6e\xeb\x0f\xaa\x91\xff\xa6\xd9\x37\x4b\xf2\xbf\xdf\xd3\xf7\xff\xfb\xc1\x8e\xfe\x9f\xd7\x13\x07\x9c\xb9\x7d\xb6\xf0\xdf\xac\xb7\xf3\x9f\xef\xb6\xa9\xf2\x1f\x94\xbd\x35\x6b\xde\x5d\x50\x80\xf3\xcb\x62\x5e\xd0\x4a\xd5\xfc\x16\x76\xa1\x66\xc9\x5f\x03\x27\xde\x08\x9d\xda\x0c\x28\xf0\x94\x35\x4f\x57\x7c\x40\x4f\xb9\x71\xaa\xbd\x1c\x27\xe8\xcc\x5f\xc4\x3e\x1c\x44\x85\x32\x64\x3c\x2a\x84\x72\x8f\x21\x2c\x90\xcb\xfc\x29\xfc\x1f\x15\x2a\x18\x2d\x74\x25\xa3\xc3\x8c\x08\x84\x51\xaf\xd3\x03\x39\x0e\xd5\xb1\x44\xed\x42\x41\x33\x5f\xd0\xec\x74\x10\xf3\xa1\x7c\x6a\x75\x2d\x0f\xfa\x55\x5f\x92\xd2\x41\xa6\x16\x57\x63\x4f\x7a\x9e\x74\x7c\x64\xb4\xf2\x36\xd9\x5a\x8f\xc2\x8a\xe3\xa0\xe0\x1f\x58\x73\x66\x45\x8b\x4b\x3d\x5a\x6e\x0a\xa6\x34\x08\x95\x31\xe7\x95\x92\x3d\xe2\x31\x0e\xa6\x8d\xd9\xf9\x40\x8b\x96\x11\xf9\x3d\x54\x72\xf5\x79\xed\x3c\xe1\x0f\xd8\xdd\x9c\x2d\x4d\x83\xc2\x76\xe6\x7e\xb7\x58\xbd\x6c\xb3\xf6\xd3\x5d\x1e\x4a\xe6\x29\xe3\xae\x18\x51\x74\xc7\x60\xf9\xb2\x2b\x9f\xa8\x05\x6d\xe9\x1d\x04\xdb\xda\x7f\xbb\xc4\x01\xd7\xc6\xff\xf7\xca\xf6\x5f\xcf\x1c\xea\xf7\x7f\xf6\x82\xdd\xed\xbf\xfa\x30\xe0\x1d\x83\x72\xf3\x36\xe6\x5f\x3a\x36\x77\x1f\xa8\xe6\xff\x9b\xcb\xb3\x8b\x0f\x97\x2d\xcf\x7e\x36\x8d\xda\xf8\xbf\x7e\x29\xfe\xcf\x80\xd2\x9a\xff\xf7\x82\x93\xd2\x67\xf7\x1a\xd1\x97\x41\xe6\xd4\x75\x91\x43\xdc\x20\xfa\x1c\x08\xf5\x61\x8e\x20\x61\xf9\x9d\x8f\xe5\xd7\x00\xf3\xdf\xf9\x68\x34\x4e\x4e\x10\xb0\x3b\xe1\xc4\x07\x16\x3a\xf3\xc5\x1c\x04\x4b\xa3\xd1\x44\xf7\x4b\xc6\xb9\x1f\x21\xd0\x63\x66\xd4\x26\x71\x63\xab\x9f\x1e\x53\xf4\xe6\xd8\x97\xea\xc3\x24\xb1\x9d\x59\xf8\x1a\x59\x8e\xe2\x3f\x15\x87\xc7\x79\x02\x81\x32\xad\xb4\x6b\xd5\xb2\x8d\x26\x8b\x54\xc5\x8d\x2f\xb1\x54\x81\xfb\xa4\x81\xfb\x56\xd4\xcf\xdb\xe8\xab\x76\xa0\x85\x47\x9d\x44\x0f\x14\x64\x4d\xe3\xfe\xfe\x5e\x9d\x6a\xeb\xbe\x6f\x06\x59\xaf\x9e\x95\x35\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\x34\xfe\x82\xf8\x1f\x65\xea\x0c\x46\x00\x78\x00\x00\x01\x00\x00\xff\xff\x89\x17\x0c\xcf\xb8\x0a\x00\x00")

func manifestsIngressNginxTarGzBytes() ([]byte, error) {
	return bindataRead(
		_manifestsIngressNginxTarGz,
		"manifests/ingress-nginx.tar.gz",
	)
}

func manifestsIngressNginxTarGz() (*asset, error) {
	bytes, err := manifestsIngressNginxTarGzBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/ingress-nginx.tar.gz", size: 2744, mode: os.FileMode(436), modTime: time.Unix(1544012145, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"manifests/cert-manager.tar.gz":             manifestsCertManagerTarGz,
	"manifests/default-network-policies.tar.gz": manifestsDefaultNetworkPoliciesTarGz,
	"manifests/ingress-nginx.tar.gz":            manifestsIngressNginxTarGz,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"manifests": {nil, map[string]*bintree{
		"cert-manager.tar.gz":             {manifestsCertManagerTarGz, map[string]*bintree{}},
		"default-network-policies.tar.gz": {manifestsDefaultNetworkPoliciesTarGz, map[string]*bintree{}},
		"ingress-nginx.tar.gz":            {manifestsIngressNginxTarGz, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
