// Code generated by go-bindata.
// sources:
// manifests/cert-manager.tar.gz
// manifests/default-network-policies.tar.gz
// manifests/ingress-nginx.tar.gz
// DO NOT EDIT!

package components

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _manifestsCertManagerTarGz = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x7d\x07\x82\xf8\x1f\x8b\x08\x00\xba\xfd\x04\x5c\x00\x03\xed\x5b\x5b\x73\xdb\x36\x16\xf6\x33\x7f\x05\x46\xde\x87\x76\xa7\xa4\x48\xea\xd6\xd1\xb4\x3b\x75\x13\x77\xb7\xd3\x38\xf5\x38\xde\xbc\xec\x74\x6a\x88\x84\x24\xc4\x24\xc1\x00\xa0\x52\x35\x93\xff\xbe\x07\xe0\x45\x24\x45\x45\xb2\x1d\xcb\x69\x83\x6f\x3c\x63\x11\xc4\xf5\xe0\xdc\x01\x3a\xfd\x18\x27\x74\x4e\x84\x14\xfd\x80\x70\x69\xc3\x23\x5e\x10\xde\x3f\xf9\x74\x70\x01\x93\xc9\x48\xfd\xf7\x26\x23\xb7\xfe\xbf\xc4\x89\x37\x18\xba\x9e\x37\xf1\x27\x83\xc1\x89\xeb\x8d\xfd\xa1\x7f\x82\x46\x9f\x70\x0e\x3b\x91\x09\x89\x39\x42\x27\x58\x2c\xe9\x1b\x42\xa4\x3f\xec\xae\xb7\xef\xfd\x5f\x14\xce\xae\xfd\x5f\xe1\x28\x23\xc2\x59\xe3\x38\x7a\xe8\x18\x6a\x83\xc7\xe3\xe1\xce\xfd\xf7\xfc\x51\x73\xff\x7d\x77\xe8\x0f\x4e\x90\xfb\x29\x16\xb8\x0f\x5f\xf8\xfe\x9f\xa2\x97\x38\x26\x22\xc5\x01\x41\x34\x41\xef\x96\x34\x58\x22\xb9\xa4\x02\xd5\xb9\x01\xcd\x08\x0a\x49\x1a\xb1\x35\x09\xad\xa4\x6c\x30\x6d\xd4\xb1\x48\x8c\x69\x34\x45\xbd\x9e\xf5\xd4\x8b\x32\x38\x18\x3b\xe5\x5f\x92\x38\x8d\xb0\x24\xe2\xe1\x96\xe0\xce\xfa\xdf\x77\xfd\xa1\x6b\xf4\xff\x31\x70\xc0\xfe\x0b\xc2\x57\x34\x20\x38\x08\x58\x96\xc8\x7b\x58\x84\x7d\xfa\x7f\x38\x6a\xeb\xff\xa1\x37\x1c\x19\xfd\x7f\x0c\xe0\x94\xbe\x26\x5c\x50\x96\x4c\xd1\xca\xb3\x6e\x69\x12\x4e\xd1\xab\x7c\xc7\xcf\xf2\x1d\xb7\x62\x22\x71\x88\x25\x9e\x5a\x08\x29\xe5\xdf\xd2\xfb\x08\xbd\x7f\x6f\x23\x3a\x47\xce\xeb\xdc\x67\xa8\x0c\x04\xfa\xf0\xa1\x68\x52\xd8\x8b\xf7\xef\x77\x55\x52\x5d\x90\x48\x90\x76\x8b\x8e\x91\x48\x12\xea\x5a\x11\x9e\x41\x0b\x35\x29\x84\x70\x9a\x6e\xd5\x45\x28\x58\x62\x2e\x9b\xe5\xf6\xca\x75\xc6\x8e\x6b\x87\x64\xe5\xb8\xba\x12\x27\x11\xc1\x62\x7b\x28\x84\x96\x84\x53\x09\x4f\x53\x74\x4d\xa3\x08\x0a\x9f\x7a\xb3\x1e\x01\x07\xc8\x7f\x6e\xf8\x63\x72\x2f\xd9\x57\xd8\x23\xff\xbe\xe7\xfa\x2d\xf9\x1f\xf8\x93\x89\x91\xff\x63\xa0\x2e\xff\x20\x44\xa2\xbf\xf2\x66\x20\xee\xa5\x26\x78\x5e\xed\xbd\xd1\x02\xa5\x16\x10\x29\x09\xd4\x78\x1c\x68\x43\x03\x2c\xa6\xc8\x83\x27\x01\x1d\x04\x92\xf1\x7c\x26\x31\x96\xc1\xf2\x45\x6d\x6a\xbb\x26\xb7\x7b\xe4\x52\x00\x8b\x0e\x6b\xd4\x57\x88\x1a\x7d\xef\xee\xfd\x63\x2b\x83\x56\x49\xc2\x24\x96\xb0\xfb\x45\x57\xe5\xda\xf4\xef\x86\x15\x78\xd9\xb5\xe5\x9a\xbc\x2c\x91\x98\x26\xc0\x44\x9b\xd9\xd8\xdd\x1c\x52\x82\xc6\x9a\x9e\xbd\xb7\x19\x5e\x3b\x94\xf5\xdf\x10\x09\x52\x18\xdc\x36\x34\x90\xad\x3a\xe6\x4c\x91\x7c\x0a\xdb\x35\x72\xdc\x5e\xbb\x8b\xcb\x2c\x8a\x2e\x19\x6c\xc2\x7a\x8a\x7e\x9e\xbf\x64\xf2\x92\x13\xa1\x78\x75\x53\x0f\xf3\x45\x6d\x5e\x6a\x66\xb6\x1d\x44\x20\xf4\x30\x00\x54\x66\x19\x0f\x88\x5d\x71\xda\xf7\xff\xf8\xea\xf2\xd7\xe7\xbf\xbf\x3c\xbb\x38\x7f\x75\x79\xf6\xec\xfc\xeb\x56\x4b\xa0\x64\x08\x0d\xf5\x56\x03\xd1\x0e\x6b\x48\x92\x55\x73\x06\x39\x6d\x1a\xf5\x6b\xef\x11\xd2\xa1\xf7\x4f\x9c\xc5\xd3\x46\x31\x42\x73\x4a\xa2\xf0\x8a\xcc\xdb\xe5\xc5\x9b\x4b\x2c\x97\xd3\x8a\x53\x36\xb2\x55\xab\x5d\x2e\x59\x34\xbb\xe0\xe4\x6d\xa6\x4c\x40\xbb\xe3\x20\xcd\x80\xbb\xdd\xb8\x55\x1c\x93\x98\x71\xa0\xf9\xc0\xbf\xa0\x7f\x47\xa3\xf8\x05\xe1\x00\xfb\x5f\x88\x0b\x15\x22\x53\x52\xc9\xc3\xbb\xba\x01\xfb\xfc\xff\xf1\x70\xd8\xf6\xff\xc7\x9e\x6f\xec\xff\x31\xd0\xb4\xff\x94\xfc\x21\x49\xa2\x9e\x84\x73\xfb\xad\x50\xba\xb9\xe9\x0f\x3c\x03\x72\xb1\xf8\xaa\xd0\x22\xcf\xc9\x9c\x26\x54\x69\xc2\x2e\xef\xa0\xce\x36\xc2\x51\xcc\x55\xf0\x56\xd1\xb5\xd5\x61\x7f\x7a\x4b\x12\xc5\x8e\x58\xf6\x97\x8c\xdd\xf6\xa0\x13\x1e\xda\x34\x81\x2d\x8a\xa2\x27\xb5\xf5\x0b\xce\xb2\x62\xbc\xad\x45\xac\x36\xf1\x13\x8e\xd2\x25\xf6\x4a\xdf\x25\x9f\x68\x41\xb8\x9c\x1a\x3f\x6b\x6a\xe8\xf2\x34\xca\x38\x8e\xda\x74\x52\x9e\x44\xc0\x52\x52\xb5\x40\xe8\x51\x35\xec\x01\xf2\x7f\x7f\xc1\x2f\xb0\x57\xfe\xfd\x76\xfe\x67\xe0\xbb\x46\xfe\x8f\x82\xc7\x93\x7f\x23\xf8\x9a\x62\x1d\x12\xbf\x25\xea\x55\x0a\x3e\x3c\xba\x37\x75\x80\xfc\x47\xe0\x9d\x93\x24\xe0\xeb\x54\xda\x4d\x5f\x00\xb6\x67\x41\x93\xc5\x3e\xb5\xb0\x47\xfe\x3d\x77\xd0\xca\xff\x0d\x5c\x77\x68\xce\x7f\x8e\x82\xba\xfc\x6f\x33\x79\xbf\xe2\xec\x2e\x2b\xb6\x2d\xf3\x75\x56\x29\x98\xa3\x92\x24\x1c\xc4\x45\x2c\x7b\x8a\xae\x97\x04\x9d\x3d\xbb\x38\xd7\x31\x26\xd8\xb8\xff\x5e\xbd\xc8\xc3\x4f\xfd\x38\x45\x4b\x29\x53\x31\xed\xf7\x55\x9b\xb2\x23\x10\x67\xdf\x81\xe9\x3a\xb5\x41\x1c\xc6\x17\xfd\x90\x72\x1d\x79\xaf\x8b\xce\xcf\xd5\x39\x14\xc2\x61\x08\xc1\x8e\x40\x99\x20\x21\x9a\x33\x9e\x8f\xc7\xc9\x82\x0a\xc9\xb5\xe6\xd1\xd5\x5b\x49\x0b\x7d\x86\x95\xe7\x22\x20\x70\xcb\x0f\xb4\x6a\xe9\x8a\xc6\xeb\x46\xb2\xa2\xaa\xfd\x9d\xfe\xff\xaf\x4d\x8d\x22\x4f\xa1\x66\xa6\xe4\x1c\xb1\x39\xc2\xb0\xd0\x80\x13\x99\x4f\x4e\x32\x04\x4a\x95\x13\x24\x4b\xaa\x14\xa9\x76\x94\x72\xba\x02\x11\x44\xb7\x24\x5f\x5b\xf1\xfc\x0b\x59\xbf\xd2\xed\x6b\xa1\xe0\x6e\xfa\x17\x44\x49\xf0\x2c\xca\x87\xf8\xcf\xf5\xf5\xa5\xed\x7a\x4a\x65\x82\xaa\x4b\x16\x04\xfa\x65\x2b\x1a\x96\xaa\x10\x68\xef\x7a\xb0\xec\x0f\x26\xb4\xfb\xfb\xe3\x00\xfd\x5f\xe5\x11\xee\x7b\x19\x60\x9f\xff\x37\xf2\xb6\xfc\x3f\x77\x34\x34\xfa\xff\x18\xe8\x3c\xff\xa9\xfc\x91\x86\x8a\x7f\x9a\xfc\xee\xfe\x51\xef\x34\xe0\xae\xb1\xd0\x56\x32\xb9\xc3\x1a\x86\x54\x28\x2d\x6a\xaf\x70\x44\x43\x6d\x43\xa6\xa8\x27\x79\x46\xfe\xba\x57\x1e\x1e\xe4\xff\x81\xdd\x38\x24\x26\xdc\xef\xff\x0d\x5a\xf2\x3f\x19\x8c\x3c\x23\xff\xc7\xc0\xe3\xf9\x7f\x8a\x39\x32\x9d\x26\x7f\xb8\x0b\x68\x5c\xbf\x3b\xb9\x7e\x35\xd2\x1b\xef\xcf\xe0\x63\x38\x40\xff\xf3\x19\x0e\x1e\x74\x0f\x74\x9f\xfe\x9f\x8c\xc7\x2d\xfd\xef\xbb\xe6\xfe\xcf\x71\x50\xd7\xff\x7a\xa3\x71\x26\x97\x8c\xd3\x3f\xb5\x9e\xdc\x91\x04\xcc\xad\xc0\x15\x8b\xc8\xfe\x5b\x01\xc7\x4f\xdd\xf1\x2c\xca\x53\x70\xb6\xca\x68\xfe\x5b\x25\xf0\xc4\x14\xfd\xaf\xb7\x6d\xde\x7a\xbf\x15\x7d\x97\x87\xa2\x45\x2d\x3a\xa7\x81\x62\xfd\xde\x37\xa8\x57\x24\xeb\xd4\xcf\x66\xa6\xbe\x68\x0c\xc6\x6a\xa6\x1b\xfe\x53\x17\xb4\xc6\xec\x1c\x81\x25\x73\xba\x88\x71\xaa\x3b\xcd\xcd\x81\xfe\x49\x56\x24\x91\x45\xa1\x3e\x7a\xd7\xbf\x53\x16\x1e\x36\xd6\x26\x77\xdb\x35\x2a\x4d\x16\xca\x28\x92\xce\xbe\x6c\xdb\xb6\x1e\xc8\x09\x3f\x42\x81\x4a\x37\x7c\x8e\x0c\x01\xd3\x2b\xec\x65\x49\xb0\x8f\x2c\xd1\x6a\x1d\xd9\x68\x36\xef\x5c\x8b\xc8\x66\x6f\xc0\xfd\x28\x78\x6d\xc7\x8d\x87\x8f\xc7\x2f\x07\xc6\x4d\x5b\x1e\xc7\xee\xd8\xa9\xed\x7a\x74\xde\xe8\xdb\xc8\xff\x21\xe7\xbf\x1b\x89\xb8\xdf\x21\xd0\xbe\xf8\x7f\xe2\xb5\xef\x7f\x0d\x3d\x13\xff\x1f\x07\x8f\x78\xfe\x5b\x53\xa4\x5f\xd8\x21\xd0\xf6\xb1\x4e\xd7\x89\xf0\x86\x3e\xcd\xf3\xe0\x1a\xdd\xf2\x88\x08\x54\x94\xbe\x7e\x55\x5d\xcf\xb1\x75\xa5\xc6\x83\xb8\xa7\xbb\xbe\x53\xfe\xaf\xce\xcf\x9e\x5f\x9c\x3b\x71\xf8\x70\x1e\xbb\xf3\xf9\x2f\xbc\xf5\xcc\xfd\xcf\xa3\xe0\xb4\x29\x06\xd6\xb5\xfa\xf4\xe7\x1d\xb0\x3f\x48\x43\x94\xa2\x35\xcb\x50\x21\x81\x3a\x7a\x6c\x7c\x14\x14\xb0\x38\x65\x89\xba\x17\x6c\x59\xd6\xe9\x29\x02\x1b\x4b\x38\xc4\xa0\x10\xca\x26\xe2\x9d\x3a\xe1\xb4\x6c\x74\x53\x99\xaa\x9b\x29\xba\xcc\x43\x4d\xdd\xd5\xc6\xc4\x55\xdf\x1d\xa9\xd1\xde\x61\x88\x7e\x21\x2e\xce\x6f\x1d\x6f\x0d\xfa\x8d\x32\xa6\xfa\xfb\x24\xf8\x03\xf5\x51\x46\xaf\x21\x9a\xad\xa1\xcd\x1c\x67\x91\xcc\x2f\xd0\xa9\x0a\x37\xf5\xa6\x37\x8e\x9e\x8f\x0e\xd2\x5b\x73\x21\x8d\xbc\x41\x3e\x19\x10\xbb\x2c\x0a\xd5\x97\x4f\xbb\xf3\x08\x8e\x5e\xf7\x2b\x0c\xa6\x92\x80\x3a\xd3\x8b\x46\x73\x0a\x0e\x83\x75\x73\x73\xa3\x0c\xe5\xbe\xaf\xa5\xe6\x8c\xfd\x30\xc3\xdc\x01\x5a\xaa\x26\x9f\xcf\xf9\xef\x33\xa5\x4b\x3f\xc9\xe7\x7f\x7b\xe5\x7f\x30\xf4\xda\xdf\xff\x78\x63\x13\xff\x1d\x05\xad\xfc\x7f\x48\x44\xc0\x69\x9a\xa7\xb6\x95\x85\xb2\x2f\x0a\x61\x57\xfc\xff\x82\xdd\xb2\x98\x49\xba\x22\xe5\xad\x25\x8b\x24\x0b\x9a\x00\x6f\x2f\x98\x4c\x23\x0b\x78\x7a\x73\x19\xb8\x74\x89\xcf\x0a\xca\xa1\x33\x65\x9f\xd7\xd8\xaa\x12\x66\x25\x4d\x7f\x00\x8b\xb8\x62\xd1\xad\xb2\xa8\x5d\x7e\x76\x79\x65\xd5\xae\xb2\x82\x0b\x2a\x97\xd9\x4c\x49\x4d\xbf\x68\xdb\x8f\x60\x72\x81\x8c\xac\xca\x20\xbb\x8e\x07\x26\xff\xa9\x09\x6c\x60\x60\x60\x60\x60\x60\x60\x60\x60\x60\x60\x60\x60\x60\x60\x60\x60\xf0\x84\xf8\x3f\xd2\x1b\x2b\xb0\x00\x50\x00\x00\x01\x00\x00\xff\xff\xe3\xbd\x3a\x1d\x7d\x07\x00\x00")

func manifestsCertManagerTarGzBytes() ([]byte, error) {
	return bindataRead(
		_manifestsCertManagerTarGz,
		"manifests/cert-manager.tar.gz",
	)
}

func manifestsCertManagerTarGz() (*asset, error) {
	bytes, err := manifestsCertManagerTarGzBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/cert-manager.tar.gz", size: 1917, mode: os.FileMode(436), modTime: time.Unix(1543830970, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _manifestsDefaultNetworkPoliciesTarGz = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x44\x02\xbb\xfd\x1f\x8b\x08\x00\xba\xfd\x04\x5c\x00\x03\xed\x95\xdb\x8e\x9b\x30\x10\x86\xb9\xe6\x29\xfc\x02\x98\x43\x38\xb4\x5c\x55\x3d\x5c\xb5\xaa\x2a\x6d\xb5\xf7\x5e\x33\x09\x5e\x0c\x46\xd8\x64\x1b\xad\xf6\xdd\x6b\x93\xb0\x5d\x45\x49\x93\x36\x52\xda\xaa\xf3\x21\x64\x6c\x86\xb1\xe1\x9f\xdf\xd0\xb0\x65\x9d\x58\x82\x36\x3a\xac\x60\xc9\x46\x69\x82\x0e\xcc\x83\x1a\x9a\xa0\x57\x52\x70\x01\x3a\xf4\x2e\x23\xb2\x14\x45\xe6\xda\xb8\xc8\xa2\x97\xed\x8c\x17\x2f\x16\x45\x91\xc4\x69\x92\x25\x5e\x94\x44\x79\x92\x78\x24\xbb\x70\xde\xb3\x18\xb5\x61\x03\x21\x1e\xd3\xb5\xb8\x07\x30\x49\x7a\x38\xee\xd4\xfd\x7f\x14\x7a\x8e\xfe\x06\xda\x5e\x32\xf3\xbb\x95\x70\xbe\xfe\x8b\x3c\x4d\x62\xab\x7f\x82\xfa\x5f\x89\x5f\xd4\xbf\x82\x6e\x13\xb4\x60\x58\xc5\x0c\x0b\x18\xe7\xa0\x35\xdd\xb0\x56\xfe\x6c\x0e\x27\x70\x9e\xa7\x47\xf5\xcf\xb2\xc5\x9e\xfe\x45\x9a\x67\x1e\x89\xae\xf1\x01\xfe\x73\xfd\x59\x2f\x6e\x61\xd0\x42\x75\x25\xd9\xe9\x2e\xba\x15\x6d\x5e\x69\x2a\x54\xb8\x8e\x7d\xdb\xad\x4a\xf2\x79\x7b\xeb\x8b\xab\x88\x8d\x3f\x17\x40\xe9\x13\xd2\xb1\x16\x4a\x32\xd5\x05\xac\x06\x5b\x0e\x81\x51\x01\x7b\xd0\xcf\x55\x62\x63\x1e\x1f\x03\x22\x96\x84\xde\x32\x39\x82\xa6\xee\x11\xdd\x33\x0e\xe4\xe9\x69\x97\x61\xea\x96\x36\xf0\x58\x90\x4b\x01\x52\xc3\xfe\x13\xbb\x9a\x9d\x23\xba\xca\x85\xeb\x1e\xb8\x5b\x5b\xaf\xaa\x1b\x90\xc0\x8d\x1a\x6c\xee\xa7\x69\xc4\xbd\xc0\xd7\x4d\x0f\xda\x05\x04\xe4\xc3\xb4\x66\x7b\xb9\x5d\xfc\x76\xd0\x28\xd7\xba\x2b\xd1\xbf\x95\x8a\x37\xdb\xae\x83\x8b\xca\xe6\x8a\xe8\x74\x84\xd1\xf3\x38\x7c\xe3\xd0\x9b\x1f\x71\x01\x89\xf3\xd7\x34\xc9\x52\xea\xda\x28\x4c\x52\xff\x4f\x4b\x7d\x90\xb3\xfc\xff\xae\x66\x83\x39\x69\xf3\xa3\x9c\xf2\xff\x22\x2f\xf6\xfe\xff\x49\x96\xa1\xff\xaf\xc2\x4b\xff\x5b\xb7\x57\xa0\xf9\x20\x7a\x33\xf5\x3f\x8e\x77\x30\xd8\x62\x00\x3d\xfb\x9f\xcc\x25\x41\x96\x6a\x20\x9f\x54\xa3\x5a\x65\xc4\x1a\x08\x97\xf6\x3b\xc2\xe0\x43\xb7\x12\x9d\xb5\xe5\x4a\x99\x5e\xfa\x2d\x13\x9d\xb1\xa7\x9d\xa0\xf4\x83\xdd\x56\x71\x33\x0e\xec\x9e\xbc\x07\x5d\xb7\x63\x53\x3b\xe7\xd9\x30\x59\x12\xed\xc6\xdf\xd8\xed\x66\xad\x64\x63\x37\x1f\x7f\xde\x59\x0e\x17\xa5\xaf\xd5\x38\x70\x98\x12\xd7\xc6\xf4\xba\x0c\xc3\x95\x30\xf5\x78\x47\xb9\x6a\xc3\x5d\x9e\x50\xda\x35\x72\x23\xfd\xf5\xfc\x92\x11\x8d\x69\xf4\x77\x7a\x11\x41\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\xe4\x12\xbe\x03\x79\x6b\x6d\x81\x00\x28\x00\x00\x01\x00\x00\xff\xff\x70\xa7\xd3\x66\x44\x02\x00\x00")

func manifestsDefaultNetworkPoliciesTarGzBytes() ([]byte, error) {
	return bindataRead(
		_manifestsDefaultNetworkPoliciesTarGz,
		"manifests/default-network-policies.tar.gz",
	)
}

func manifestsDefaultNetworkPoliciesTarGz() (*asset, error) {
	bytes, err := manifestsDefaultNetworkPoliciesTarGzBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/default-network-policies.tar.gz", size: 580, mode: os.FileMode(436), modTime: time.Unix(1543830970, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _manifestsIngressNginxTarGz = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\xcc\x08\x33\xf7\x1f\x8b\x08\x00\xba\xfd\x04\x5c\x00\x03\xed\x1b\x6b\x53\xe3\x38\x92\xcf\xf9\x15\x2a\xb8\x2a\xee\xaa\xd6\x8e\x9d\x38\xc9\x9c\x6b\x77\xeb\xb2\xc0\xcd\x52\x35\xc3\x52\xc0\xcc\xd7\x41\xb1\x45\xac\xc1\xb6\xbc\x92\x4c\x26\xbb\xb5\xff\xfd\x5a\x7e\xc5\x76\x62\xf2\x00\x02\xb3\xe7\xfe\x02\x91\x5a\xad\x96\x5a\xfd\x90\xba\xad\x77\x03\x1c\xd2\x3b\x22\xa4\xe8\xd2\x70\xca\x89\x10\x5a\x38\xa5\xe1\xb7\xee\xc1\xb3\x81\x01\x30\x1a\x0d\xd4\x5f\x73\x34\x30\xca\x7f\x73\x38\x30\xfb\x96\x61\x9a\xa3\xe1\xc0\xb2\x0e\x0c\x73\x68\x8d\xac\x03\x34\x78\x3e\x16\x9a\x21\x16\x12\x73\x84\x0e\xb0\xf0\xe8\x57\x42\x64\xcf\x5a\x8d\xb7\xae\xff\x3b\x05\xbd\x51\xfe\x92\x04\x91\x8f\x25\x11\x4f\x3e\x09\x9b\xc9\xbf\x3f\x1a\xf5\xfa\x43\xab\x67\x1e\x18\x3d\xc3\x02\xf4\x56\xfe\x7b\x80\x4d\xe4\xef\xf8\xb0\x49\x84\x6b\x9c\xf9\x44\x9b\xd0\xd0\x05\x44\x7d\x8e\x03\x7f\xc3\x39\x94\x80\x87\x43\xab\x51\xfe\x03\xab\x2e\xff\x81\x65\x1a\x07\xc8\x78\xd1\x95\x67\xf0\x7f\x2e\x7f\x1c\xd1\xcf\x84\x0b\xca\x42\x1b\xf1\x09\x76\x74\x1c\x4b\x8f\x71\xfa\x07\x96\xd0\xa6\xdf\xbf\x13\x3a\x65\xdd\x07\xb3\x73\x0f\x72\xb7\xd1\x49\x7a\x14\xae\xe0\x24\xfc\x92\x1e\x84\x4e\x40\x24\x76\xb1\xc4\x76\x07\xa1\x10\x07\xc4\x46\xd9\x39\xea\xa8\xf3\x72\x45\xee\x54\x07\x4c\xf3\x9e\xb3\x38\x7a\x64\x12\xc0\x5a\x9a\x63\x89\xa4\x88\x27\x5f\x89\x23\x85\xa2\xa9\x65\xf8\xd7\x84\x3f\x50\x87\x8c\x1d\x87\xc5\xa1\x84\x0e\x84\xfe\xfc\x53\x43\xf4\x0e\xe9\x9f\xb1\x1f\x13\xa1\x2b\x1a\x22\xc2\x0e\x41\x7f\xfd\x95\xf4\x17\x0d\x36\xa0\x36\xa3\x29\x32\xc4\x17\x64\x79\x54\xce\x4f\x81\x15\xba\x65\xda\x36\x72\xc9\x1d\x8e\x7d\xd9\x79\x6d\xf9\xae\x83\x4d\xf4\x5f\xc9\x71\x1b\x7d\xaf\xc3\x1a\xfd\x37\x07\x23\xb3\xa6\xff\xbd\x7e\x6f\xd8\xea\xff\x3e\x60\x4b\xfd\x4f\x94\xb2\x59\xe3\xd7\x69\xde\x46\x7a\x57\xd1\xba\x95\x3a\x57\xd2\xb8\x0e\x8f\x7d\x92\x99\x83\xdc\xc8\x24\x3f\x15\x68\xe8\xf0\x30\xf9\x17\xc6\xb1\x98\x3b\xa4\xd4\xe3\xb0\xf0\x8e\x4e\x03\x1c\x89\xa2\x29\x62\xee\xe2\x87\x20\x0e\x27\x32\xfd\xfd\x40\xf8\xa4\x34\x74\x4a\xe4\x93\xe7\xcb\x31\x2e\xd4\xfa\x72\xac\x23\x74\x9a\x9a\x0d\x81\x24\x43\x87\x3f\x12\x1f\x6c\x1d\x88\x41\xa3\xee\xcf\xda\x8f\xb9\x7a\x3a\x3e\x16\xe2\xe7\xc3\x62\xcc\xaf\x84\xc3\xee\x1c\x2e\xfa\x59\x28\x41\x65\x7d\xf0\xd8\x3e\xc1\x2e\xe1\x30\x36\x51\xe9\xd2\x98\x1b\x8f\x0a\xe4\xe1\x64\x9e\x09\x41\x20\xce\x48\x12\x57\x49\x6e\xce\x62\xe4\x78\x38\x9c\x12\x44\xa8\xf4\x08\x47\x11\xe6\xc0\x24\x58\xe4\x62\xf4\xcc\x23\x21\xf2\x71\x1c\x3a\x1e\x4c\x8a\x00\x0b\x25\x13\x68\xcb\x2c\xe8\x8b\xad\x69\xe4\x4f\x8b\xe2\x89\x4f\x9d\xc3\xe6\xbd\x4e\xff\x8f\x23\x38\x75\xe4\xc9\x5b\x5f\x9b\x01\xc4\xbc\x13\x55\x38\x80\x11\xa3\xe1\x63\x47\xa4\x36\x41\x65\x15\xaf\xad\xf8\x19\x6c\x62\xff\x5d\x12\xf9\x6c\x1e\x90\x50\xee\xe6\x05\xd6\xd8\x7f\x0b\xcc\x7e\xcd\xfe\xf7\x07\x56\x6b\xff\xf7\x02\x65\xfb\x8f\xa3\x48\x2c\x4c\xfd\x69\x21\xf5\x15\x06\xbf\x49\xdd\x5f\xc1\x03\x88\x88\x38\x8a\x31\x0e\xfc\x52\x07\x0b\x1b\xf5\xe0\x97\x90\x1c\xce\xee\x74\x9e\xaa\xa4\x62\x0e\x06\x7f\x4a\x54\x2f\xd7\xd2\x00\x7f\xfb\x14\xe2\x07\x4c\x7d\x3c\xf1\x81\xba\xa9\x86\x25\x26\x97\xf1\x14\x27\xc0\xd2\xf1\x3e\xe0\x09\xf0\x92\x0f\x5a\xbb\x7c\x05\x11\x58\x56\xc0\x8a\x38\x73\xa1\x25\x57\xa4\x8c\x66\x69\x2f\x15\xf8\x15\xf2\x1b\x4e\x50\x9f\x02\x18\xcf\x76\x21\x21\xc1\x5c\x72\x5d\x59\x48\xde\x9a\x5c\xe1\xf4\xfb\x78\x42\x78\x08\x16\x3d\xf1\xed\xaa\xdd\xce\xed\x1c\x52\xc6\x52\x62\x1a\xc2\x99\x58\x0c\xd5\x36\xe5\x0a\x21\x1a\xe0\x29\x60\xfe\x1e\xe3\xb9\x22\xbe\x98\x6a\xc5\xb0\x6e\x13\x3d\xdb\xd0\xcd\x7f\xeb\x46\x89\x2c\xe6\xd3\x12\x3f\x29\x4f\x8d\xc3\x6b\x78\x9a\x96\x05\xe3\x1a\xc4\x37\xf7\x70\x6a\x34\x91\xde\x18\x7e\xfa\xc7\x3f\x2f\x7f\x3b\xfd\x72\x31\xfe\x78\x76\x7d\x39\x3e\x39\xfb\x57\xb7\x86\xb8\x44\xa8\xe2\x82\x7f\x4a\xdd\x56\x09\xe9\x08\xc5\x82\x20\x97\xcd\xc2\x19\xe6\x2e\x1a\x5f\x9e\x97\x3a\x49\xf8\x50\x5f\x41\xba\xab\x39\x0f\x95\x4e\xf0\x28\x4a\x35\xfe\xcb\x59\x60\xd7\x3a\x10\xba\xa3\xc4\x77\xb3\x9b\xd5\xca\xbe\x4b\x2c\x3d\xbb\x38\x6a\x89\x7a\x3d\x3a\x75\xb2\xfc\x97\x9d\x3f\x51\xe1\x12\x7e\xc4\xb8\x5c\x12\x69\xca\x95\x27\x65\x54\xa3\x5c\x9c\xca\x4b\x18\x66\xa3\x77\x46\xad\xdf\x63\x42\xae\xec\x2a\xd3\x14\x8f\x13\xb5\xac\x7e\x23\xd5\x7a\x5f\x41\x96\x60\x5f\x7a\x8f\xd3\x35\xd5\x7b\x46\x23\xe5\x7a\xaf\x4f\x1f\x48\x08\x67\xec\x92\xb3\x09\xa9\xee\xcf\x1d\x98\xaa\x98\x93\x1b\x0f\xce\xa0\xc7\x7c\xb0\xd1\x55\xa6\xd4\x1a\xdf\x13\x59\x97\x4a\x94\x08\xa3\x9b\xb2\xfa\x47\xbd\xb3\x91\x45\xe1\x78\x44\x2d\xf1\xd7\x9b\x9b\xcb\x4a\x17\x0d\xa9\xa4\xd8\x3f\x25\x3e\x9e\x5f\x13\x58\xac\x2b\x14\x85\x0a\x4e\x44\x38\x65\x6e\x53\xaf\x88\x1d\x08\xa5\x44\x69\x21\x66\xa5\x5f\xd2\x80\xb0\x58\x2e\x86\x97\x7a\x21\x98\x72\xe9\xdb\xde\xa0\x97\x5b\x3c\x5c\x4a\x62\x4e\xe5\xfc\x04\x4e\x18\xf9\x56\x5b\x88\x83\x23\x3c\xa1\x3e\x08\x87\x88\xfa\x12\xb1\xeb\xd6\x9b\x34\x74\x71\x76\xf3\xe5\x97\xf3\x8b\xd3\x2f\xd7\x67\x57\x9f\xcf\x97\x0c\x80\xcb\x59\xb4\x3c\x68\xfc\xe1\x43\xa5\x8d\xc7\xe1\x58\x7c\x02\x8b\x0a\x9b\xdd\x57\x77\x83\xd9\x4c\x53\x4a\x9f\x21\xc1\x22\x21\xbe\x82\xb3\x0e\x96\x72\x6e\xa3\xb1\x3f\xc3\xf3\x5c\x0f\xe1\x4a\x11\xd0\x30\xb9\x68\xbe\xe7\x60\x1d\x2e\xab\xfb\x36\x34\xde\x4a\x90\xfc\x37\x86\xcd\xe2\xff\x95\xee\x73\xe3\xcb\xc0\xda\xf7\xdf\x5e\xbf\x16\xff\x0f\x8d\x7e\xfb\xfe\xbb\x17\x28\xc7\xff\x45\xe8\x9f\xbd\xa8\xae\x88\xfb\x97\x03\xa4\xd7\x0a\xf7\xe5\x3c\x22\xc5\x5b\xf1\xf9\xe5\x52\xec\xde\xc4\x6f\x3d\x74\x2e\xc5\x21\x2b\xe2\x0f\x40\x92\xcc\x61\xbe\x8d\x6e\x4e\x72\x23\x1f\x55\xe3\x0c\x38\x3e\x70\xdb\xcf\x83\x8f\x77\xdf\x99\xd1\xda\x44\xff\x0b\x91\xec\xf8\x08\xbc\x4e\xff\x2d\xa3\xae\xff\xfd\xbe\xd9\x6b\xf5\x7f\x1f\xb0\x52\xff\x2f\x8a\x78\xbd\x6c\x01\xf6\xad\xe9\x9b\xcc\xb8\xd5\x64\x0d\xf3\xbc\xb6\x08\x5e\x15\x36\xd1\xff\x6d\xfd\x7d\x1d\xd6\xe9\xff\x68\x34\xaa\xeb\xbf\xd1\xb7\x5a\xfd\xdf\x07\x6c\xe9\xff\xdf\xd0\xbb\x1f\x5c\x6a\xc2\x90\xc9\xe4\xfa\x90\x39\x70\xf0\xd6\xc0\xb2\x47\xe2\xe4\x61\x4b\x38\x1c\xab\x18\xe1\x58\xf2\x98\x1c\xaf\x40\x48\x1d\xf9\x71\x72\xb7\x3b\xde\x32\xb0\x78\xf4\xed\xe9\x45\x23\x8c\x25\x42\x62\x2d\xa5\xc5\xeb\x45\x99\x94\x6a\xdd\x38\xff\xbb\x4b\xdd\x47\x0e\x6b\xf5\xdf\xb0\xea\xfa\x3f\xea\xf7\x5b\xfd\xdf\x07\xec\x90\xff\x5d\x5f\xf8\xb1\x7f\x63\xb0\x63\xa9\x49\x5b\x63\xb2\xcb\xfd\x7f\xdb\x7c\xe0\x1a\xfd\xef\xf5\x96\xea\xff\x86\x03\xab\x8d\xff\xf7\x02\x3b\xe6\xff\xde\xce\x3b\xc0\x22\xed\xb7\x45\xfe\x6e\x75\x9e\xe7\xe9\x69\xbb\xa6\xfc\x51\x3d\x5b\xb7\x22\x76\x51\x20\x08\xd8\x97\x20\xd2\xf3\x67\x5e\x1d\xfb\x30\xb2\x96\xaf\x8b\x18\x08\xe7\xd8\x65\x30\x03\xcf\x55\x33\x8d\x6e\xca\x39\xc0\xc7\xd2\x78\xcd\x59\xae\x23\x34\x0e\xe7\x69\x0e\x0f\x51\xa1\x1e\xb2\x03\x2a\x84\x4a\x8f\x22\x2c\x90\xcf\xc2\x29\xfc\xb5\x2b\x03\x4c\x1d\x9d\x4b\xa4\xae\x08\x44\x20\x8c\x2c\xc3\x42\x91\x1a\x8e\x25\xea\x56\x10\x7b\x65\x44\x50\x79\xc4\x42\xc0\xcf\x5f\xdd\x8b\x72\x8a\xd2\x98\x2c\x97\xa8\x6c\xf6\xd4\xe1\x6a\xed\x19\xe7\x19\xe3\xb6\xa9\x97\xdf\xe4\x57\x66\x94\x96\x12\x47\x95\xfc\xd0\x52\x59\x47\x26\x5c\x1a\xd0\x3a\x29\xd8\xd2\x28\x56\x8f\xf9\x41\xad\x39\x20\x01\xe3\x73\x1b\x96\xf4\x91\x56\x5f\xc6\xc9\xef\xb1\xb2\xab\x4f\xa3\xf3\x48\x3e\x68\xf7\x74\x46\x6d\x1b\x14\x6c\x97\xee\xe9\x57\x87\xd7\x73\x16\x83\xf6\x85\xff\x3b\x81\x6d\xeb\xbf\x5f\x20\xfe\x37\xfb\xa3\xdc\xff\x9b\x56\x6f\xd0\x03\xff\x6f\xa9\x4f\x02\x5a\xff\xbf\x07\xd8\xbd\xfe\xfb\xb1\xc2\xef\xe7\xab\xc9\xac\x56\xd9\x25\x3e\x8c\xb9\x64\xfb\x9a\x4d\x9f\x8a\x45\x45\xde\x4c\xc5\x05\xdb\xb3\xb7\x98\xf9\x39\x0a\x42\xb3\x57\xb5\xb5\xe5\x83\x5b\x70\x4e\xbe\x49\x12\x2a\x59\x8a\xc6\x59\x33\x11\x3d\xeb\xb4\x0d\x93\x25\xe2\x03\xe7\xb5\x4a\x20\x4b\x75\x91\x89\x2c\x9f\x6d\x71\x5d\x50\x6a\x19\xaf\x5c\xe3\xdb\x2a\xbf\x7c\x75\x68\xb6\xff\x57\x67\xe3\xd3\x8f\x67\x7a\xe0\x3e\x79\x8e\xb5\xf9\x9f\x41\xbf\xf8\xfe\x6f\xd8\x83\x76\x73\xa4\xba\x5b\xfb\xbf\x07\x38\x42\x15\xa9\x77\x3a\x49\x65\xf8\x8c\xfa\x3e\xf2\x88\x1f\x25\xe5\xe0\x34\x84\x3d\x82\x86\xa2\xce\x3b\x1f\x83\xca\x75\xde\x9d\xce\xd1\x11\xba\x22\x77\x84\x93\x10\x6e\x74\xe3\x50\xcc\xc0\xb1\x74\x3a\x1a\xba\x2d\xee\x72\xb7\x36\x82\x38\xf6\x81\xba\x24\x25\x56\xdc\xff\x68\x88\x66\x1e\x75\xbc\x64\xbe\x19\x0e\xa5\x2a\x4c\x4f\xdf\x19\x00\x13\x38\x5a\x9e\xf1\x07\x75\xdd\x4c\xfb\x04\x98\x66\xa9\x6e\x57\x8a\xb2\x8b\x26\xf3\xfc\x8a\x93\x16\xb1\x29\x84\xdb\x8c\xc0\xad\x9e\xf0\x79\x8d\x21\xb8\x81\x4b\x4a\xca\x24\xba\xa3\xe0\xcf\x3a\xb7\xb7\xb7\x2a\xba\xe9\xac\xb8\x7a\x42\xd7\xdf\xd3\x64\x34\xeb\xff\x89\x87\xf9\x8e\x05\xdf\x35\x58\xa7\xff\xea\x63\x9f\x42\xff\xcd\x5e\xf2\xfd\xa7\xd9\xd6\x7f\xef\x05\x6a\xf9\x1f\x08\x70\x1c\x4e\x23\x99\xfc\xbe\x48\x74\x7d\x82\x85\xfa\x32\x24\xd3\x3f\x16\x11\x8e\x25\xe3\x1d\xa2\x4e\x09\x68\xc8\x94\xc9\xc8\xef\x04\x70\xc7\x2e\xde\x1b\xf2\x77\x86\xeb\x98\xe3\xaf\xe8\x94\x08\x2f\x88\xef\x95\x63\x27\x80\xe6\xdb\x48\xa8\xf6\xff\x40\x40\xf9\xc0\xfc\x7b\xf5\x1c\x5b\x89\x1e\x33\x43\x54\x38\x77\x2d\x4d\x72\xd8\xdd\xee\x94\x4a\x2f\x9e\xe8\x0e\x0b\xba\xd9\xe0\xae\xcf\xee\x99\x23\xfd\xce\x43\xbe\x06\x43\x37\xf5\xf6\x56\xb9\x39\x34\xeb\x7f\x62\x3a\x85\x26\x12\x4b\xf9\x24\x3b\xb0\x4e\xff\x4d\x63\x54\xf2\xff\x23\xf5\xfd\x9f\xd9\x6f\xf5\x7f\x2f\x70\xb4\x28\xf6\x58\x38\xe1\xb2\xc7\x4d\x4f\x83\xfa\x48\x2c\x75\xc7\xc4\x5d\xe5\x1f\x5f\x7b\x19\x2d\xb4\xd0\x42\x0b\x2d\xb4\xd0\x42\x0b\x2d\xb4\xd0\x42\x0b\x2d\xac\x81\xff\x01\x58\x8d\x22\x94\x00\x50\x00\x00\x01\x00\x00\xff\xff\xa2\x93\xf2\x0a\xcc\x08\x00\x00")

func manifestsIngressNginxTarGzBytes() ([]byte, error) {
	return bindataRead(
		_manifestsIngressNginxTarGz,
		"manifests/ingress-nginx.tar.gz",
	)
}

func manifestsIngressNginxTarGz() (*asset, error) {
	bytes, err := manifestsIngressNginxTarGzBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/ingress-nginx.tar.gz", size: 2252, mode: os.FileMode(436), modTime: time.Unix(1543830970, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"manifests/cert-manager.tar.gz": manifestsCertManagerTarGz,
	"manifests/default-network-policies.tar.gz": manifestsDefaultNetworkPoliciesTarGz,
	"manifests/ingress-nginx.tar.gz": manifestsIngressNginxTarGz,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"manifests": &bintree{nil, map[string]*bintree{
		"cert-manager.tar.gz": &bintree{manifestsCertManagerTarGz, map[string]*bintree{}},
		"default-network-policies.tar.gz": &bintree{manifestsDefaultNetworkPoliciesTarGz, map[string]*bintree{}},
		"ingress-nginx.tar.gz": &bintree{manifestsIngressNginxTarGz, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

