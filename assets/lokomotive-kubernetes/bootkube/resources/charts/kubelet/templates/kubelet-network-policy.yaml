apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kubelet-deny-all-egress
  namespace: kube-system
spec:
  podSelector:
    matchLabels:
      k8s-app: kubelet
      tier: control-plane
  policyTypes:
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kubelet-deny-all-ingress
  namespace: kube-system
spec:
  podSelector:
    matchLabels:
      k8s-app: kubelet
      tier: control-plane
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kubelet-allow-metrics-ingress-from-selected-pods
  namespace: kube-system
spec:
  podSelector:
    matchLabels:
      k8s-app: kubelet
      tier: control-plane
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          lokomotive.kinvolk.io/scrape-metrics: "true"
      podSelector:
        matchLabels:
          lokomotive.kinvolk.io/scrape-metrics: "true"
    ports:
    - port: 10250
      protocol: TCP
    - port: 10255
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kubelet-allow-egress-to-apiserver
  namespace: kube-system
spec:
  podSelector:
    matchLabels:
      k8s-app: kubelet
      tier: control-plane
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          k8s-app: kube-apiserver
          tier: control-plane
    ports:
    - port: 6443
      protocol: TCP
    - port: 7443
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kubelet-allow-egress-to-coredns
  namespace: kube-system
spec:
  podSelector:
    matchLabels:
      k8s-app: kubelet
      tier: control-plane
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          k8s-app: coredns
          tier: control-plane
    ports:
    - port: 53
      protocol: TCP
    - port: 53
      protocol: UDP
